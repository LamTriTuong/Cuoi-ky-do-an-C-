// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopOnline.Api.Data;

#nullable disable

namespace ShopOnline.Api.Migrations
{
    [DbContext(typeof(ShopOnlineDbContext))]
    partial class ShopOnlineDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ShopOnline.Api.Entities.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("ShopOnline.Api.Entities.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("ShopOnline.Api.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Phan thuong game thu top 100 td",
                            ImageURL = "/photos/Balo/TD.jpg",
                            Name = "Balo Challenger",
                            Price = 350m,
                            Qty = 100
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Balo of FPX Team",
                            ImageURL = "/photos/Balo/FPX.jpg",
                            Name = "Balo Fpx",
                            Price = 400m,
                            Qty = 45
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "Balo of IvitusGaming",
                            ImageURL = "/photos/Balo/IG.jpg",
                            Name = "Balo IG ",
                            Price = 450m,
                            Qty = 30
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Description = "Balo of SKTelecomT1",
                            ImageURL = "/photos/Balo/T1.jpg",
                            Name = "Balo T1",
                            Price = 350m,
                            Qty = 60
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Description = "Balo of TeamSoloMid",
                            ImageURL = "/photos/Balo/TSM.jpg",
                            Name = "Balo TSM",
                            Price = 0m,
                            Qty = 400
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            Description = "The jacket for Damwon Gaming",
                            ImageURL = "/photos/Jacket/dw.jpg",
                            Name = "Jacket DW",
                            Price = 700m,
                            Qty = 120
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            Description = "The Jacket for EdwardGaming Team",
                            ImageURL = "/photos/Jacket/edg.jpg",
                            Name = "EDG Jacket",
                            Price = 800m,
                            Qty = 200
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 3,
                            Description = "The jacket for the match of G2 team",
                            ImageURL = "/photos/Jacket/g2.jpg",
                            Name = "G2 Jacket",
                            Price = 650m,
                            Qty = 300
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            Description = "The jacket for GenG team - The Team 1st of Korea",
                            ImageURL = "/photos/Jacket/geng.jpg",
                            Name = "GenG Jacket",
                            Price = 600m,
                            Qty = 20
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 3,
                            Description = "It the Best",
                            ImageURL = "/photos/Jacket/fnc.jpg",
                            Name = "Fnc Jacket",
                            Price = 800m,
                            Qty = 15
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 3,
                            Description = "For Ahri Cosplayer",
                            ImageURL = "/photos/suit/ahri.jpg",
                            Name = "Ahri suit",
                            Price = 1500m,
                            Qty = 60
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 2,
                            Description = "For Cosplayer KDA",
                            ImageURL = "/photos/suit/kda.jpg",
                            Name = "Kda suit",
                            Price = 1700m,
                            Qty = 212
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 2,
                            Description = "Cosplay suit champ Leblanc",
                            ImageURL = "/photos/suit/lb.jpg",
                            Name = "Leblanc Suit",
                            Price = 2000m,
                            Qty = 112
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 2,
                            Description = "Very beautiful suit for cosplayer",
                            ImageURL = "/photos/suit/lulu.jpg",
                            Name = "LuLu Suit",
                            Price = 1700m,
                            Qty = 90
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 2,
                            Description = "make u feel like real neeko",
                            ImageURL = "/photos/suit/nekko.jpg",
                            Name = "Neeko Suit",
                            Price = 2100m,
                            Qty = 95
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 2,
                            Description = "The T-Shirt of TeamLiquid for the match",
                            ImageURL = "/photos/T-Shirt/tlts.jpg",
                            Name = "TL T-Shirt",
                            Price = 150m,
                            Qty = 100
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 2,
                            Description = "The T-Shirt with logo of Could 9 Team",
                            ImageURL = "/photos/T-Shirt/c9ts.jpg",
                            Name = "C9 T-Shirt",
                            Price = 200m,
                            Qty = 73
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 4,
                            Description = "The T-Shirt for fans of FPX Team",
                            ImageURL = "/photos/T-Shirt/fxpts.jpg",
                            Name = "FPX T-Shirt",
                            Price = 250m,
                            Qty = 50
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 4,
                            Description = "T-Shirt Gamer of G2 Team using for match",
                            ImageURL = "/photos/T-Shirt/g2ts.jpg",
                            Name = "G2 Team T-shirt",
                            Price = 150m,
                            Qty = 60
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 4,
                            Description = "GenG is the best team in Korea",
                            ImageURL = "/photos/T-Shirt/gets.jpg",
                            Name = "GenG T-Shirt",
                            Price = 200m,
                            Qty = 70
                        });
                });

            modelBuilder.Entity("ShopOnline.Api.Entities.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("IconCSS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IconCSS = "fas fa-spa",
                            Name = "Balo"
                        },
                        new
                        {
                            Id = 2,
                            IconCSS = "fas fa-couch",
                            Name = "Jacket"
                        },
                        new
                        {
                            Id = 3,
                            IconCSS = "fas fa-headphones",
                            Name = "suit"
                        },
                        new
                        {
                            Id = 4,
                            IconCSS = "fas fa-shoe-prints",
                            Name = "T-shirt"
                        });
                });

            modelBuilder.Entity("ShopOnline.Api.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserName = "Tuong"
                        },
                        new
                        {
                            Id = 2,
                            UserName = "Tinh"
                        });
                });

            modelBuilder.Entity("ShopOnline.Api.Entities.Product", b =>
                {
                    b.HasOne("ShopOnline.Api.Entities.ProductCategory", "ProductCategory")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
